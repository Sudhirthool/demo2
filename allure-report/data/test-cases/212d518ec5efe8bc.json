{"uid":"212d518ec5efe8bc","name":"test_checkout_page","fullName":"testCases.test_CheckOutPage.Test_Checkout_Page#test_checkout_page","historyId":"1cccd967e4c101c56fe75f17c6f10495","time":{"start":1691418956049,"stop":1691418956049,"duration":0},"status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_NAME_NOT_RESOLVED\n  (Session info: chrome=115.0.5790.111)\nStacktrace:\nBacktrace:\n\tGetHandleVerifier [0x00D1A813+48355]\n\t(No symbol) [0x00CAC4B1]\n\t(No symbol) [0x00BB5358]\n\t(No symbol) [0x00BB1B33]\n\t(No symbol) [0x00BA8CA5]\n\t(No symbol) [0x00BA9D0A]\n\t(No symbol) [0x00BA9003]\n\t(No symbol) [0x00BA8355]\n\t(No symbol) [0x00BA82EC]\n\t(No symbol) [0x00BA6F26]\n\t(No symbol) [0x00BA7688]\n\t(No symbol) [0x00BB6B52]\n\t(No symbol) [0x00C0CF01]\n\t(No symbol) [0x00BFA73C]\n\t(No symbol) [0x00C0C922]\n\t(No symbol) [0x00BFA536]\n\t(No symbol) [0x00BD82DC]\n\t(No symbol) [0x00BD93DD]\n\tGetHandleVerifier [0x00F7AABD+2539405]\n\tGetHandleVerifier [0x00FBA78F+2800735]\n\tGetHandleVerifier [0x00FB456C+2775612]\n\tGetHandleVerifier [0x00DA51E0+616112]\n\t(No symbol) [0x00CB5F8C]\n\t(No symbol) [0x00CB2328]\n\t(No symbol) [0x00CB240B]\n\t(No symbol) [0x00CA4FF7]\n\tBaseThreadInitThunk [0x75CA7D59+25]\n\tRtlInitializeExceptionChain [0x77EBB79B+107]\n\tRtlClearBits [0x77EBB71F+191]","statusTrace":"browser = 'chrome'\n\n    @pytest.fixture()\n    def setup(browser):\n        if browser == \"chrome\":\n            driver = webdriver.Chrome()\n            print(\"------Launching Chrome Browser------\")\n    \n        elif browser == \"firefox\":\n            driver = webdriver.Firefox()\n            print(\"------Launching Firefox Browser------\")\n    \n        elif browser == \"edge\":\n            driver = webdriver.Edge()\n            print(\"------Launching Edge Browser------\")\n    \n        else:\n            print(\"headlessmode\")\n            chrome_option = webdriver.ChromeOptions()\n            chrome_option.add_argument(\"headless\")\n            driver = webdriver.Chrome(options=chrome_option)\n    \n        driver.maximize_window()\n>       driver.get(\"https://automation.credence.in/shop\")\n\ntestCases\\conftest.py:38: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nC:\\Users\\rthoo\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:355: in get\n    self.execute(Command.GET, {\"url\": url})\nC:\\Users\\rthoo\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:346: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000169D9349FD0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: net::ERR_NAME_NOT_RESOLVED\\\\n  (...dInitThunk [0x75CA7D59+25]\\\\n\\\\tRtlInitializeExceptionChain [0x77EBB79B+107]\\\\n\\\\tRtlClearBits [0x77EBB71F+191]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_NAME_NOT_RESOLVED\nE         (Session info: chrome=115.0.5790.111)\nE       Stacktrace:\nE       Backtrace:\nE       \tGetHandleVerifier [0x00D1A813+48355]\nE       \t(No symbol) [0x00CAC4B1]\nE       \t(No symbol) [0x00BB5358]\nE       \t(No symbol) [0x00BB1B33]\nE       \t(No symbol) [0x00BA8CA5]\nE       \t(No symbol) [0x00BA9D0A]\nE       \t(No symbol) [0x00BA9003]\nE       \t(No symbol) [0x00BA8355]\nE       \t(No symbol) [0x00BA82EC]\nE       \t(No symbol) [0x00BA6F26]\nE       \t(No symbol) [0x00BA7688]\nE       \t(No symbol) [0x00BB6B52]\nE       \t(No symbol) [0x00C0CF01]\nE       \t(No symbol) [0x00BFA73C]\nE       \t(No symbol) [0x00C0C922]\nE       \t(No symbol) [0x00BFA536]\nE       \t(No symbol) [0x00BD82DC]\nE       \t(No symbol) [0x00BD93DD]\nE       \tGetHandleVerifier [0x00F7AABD+2539405]\nE       \tGetHandleVerifier [0x00FBA78F+2800735]\nE       \tGetHandleVerifier [0x00FB456C+2775612]\nE       \tGetHandleVerifier [0x00DA51E0+616112]\nE       \t(No symbol) [0x00CB5F8C]\nE       \t(No symbol) [0x00CB2328]\nE       \t(No symbol) [0x00CB240B]\nE       \t(No symbol) [0x00CA4FF7]\nE       \tBaseThreadInitThunk [0x75CA7D59+25]\nE       \tRtlInitializeExceptionChain [0x77EBB79B+107]\nE       \tRtlClearBits [0x77EBB71F+191]\n\nC:\\Users\\rthoo\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:245: WebDriverException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":5,"retriesStatusChange":true,"beforeStages":[{"name":"browser","time":{"start":1691418956050,"stop":1691418956051,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0},{"name":"setup","time":{"start":1691418956051,"stop":1691418958242,"duration":2191},"status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_NAME_NOT_RESOLVED\n  (Session info: chrome=115.0.5790.111)\nStacktrace:\nBacktrace:\n\tGetHandleVerifier [0x00D1A813+48355]\n\t(No symbol) [0x00CAC4B1]\n\t(No symbol) [0x00BB5358]\n\t(No symbol) [0x00BB1B33]\n\t(No symbol) [0x00BA8CA5]\n\t(No symbol) [0x00BA9D0A]\n\t(No symbol) [0x00BA9003]\n\t(No symbol) [0x00BA8355]\n\t(No symbol) [0x00BA82EC]\n\t(No symbol) [0x00BA6F26]\n\t(No symbol) [0x00BA7688]\n\t(No symbol) [0x00BB6B52]\n\t(No symbol) [0x00C0CF01]\n\t(No symbol) [0x00BFA73C]\n\t(No symbol) [0x00C0C922]\n\t(No symbol) [0x00BFA536]\n\t(No symbol) [0x00BD82DC]\n\t(No symbol) [0x00BD93DD]\n\tGetHandleVerifier [0x00F7AABD+2539405]\n\tGetHandleVerifier [0x00FBA78F+2800735]\n\tGetHandleVerifier [0x00FB456C+2775612]\n\tGetHandleVerifier [0x00DA51E0+616112]\n\t(No symbol) [0x00CB5F8C]\n\t(No symbol) [0x00CB2328]\n\t(No symbol) [0x00CB240B]\n\t(No symbol) [0x00CA4FF7]\n\tBaseThreadInitThunk [0x75CA7D59+25]\n\tRtlInitializeExceptionChain [0x77EBB79B+107]\n\tRtlClearBits [0x77EBB71F+191]\n\n","statusTrace":"  File \"C:\\Users\\rthoo\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\pluggy\\_callers.py\", line 80, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\rthoo\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\_pytest\\fixtures.py\", line 1123, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\rthoo\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\_pytest\\fixtures.py\", line 902, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\sudhir\\software testing\\Automation Pytest Selenium Practice\\3 Aug PageObject Model\\testCases\\conftest.py\", line 38, in setup\n    driver.get(\"https://automation.credence.in/shop\")\n  File \"C:\\Users\\rthoo\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 355, in get\n    self.execute(Command.GET, {\"url\": url})\n  File \"C:\\Users\\rthoo\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 346, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\rthoo\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 245, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"hasContent":true,"stepsCount":0}],"afterStages":[],"labels":[{"name":"parentSuite","value":"testCases"},{"name":"suite","value":"test_CheckOutPage"},{"name":"subSuite","value":"Test_Checkout_Page"},{"name":"host","value":"SUDHIR"},{"name":"thread","value":"6172-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testCases.test_CheckOutPage"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"b0307d5d40eac3b3","status":"passed","time":{"start":1691332003627,"stop":1691332024664,"duration":21037}},{"uid":"480cf3c5d322d3cf","status":"passed","time":{"start":1691298170727,"stop":1691298194384,"duration":23657}},{"uid":"3c1396b116b989ab","status":"broken","statusDetails":"selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=115.0.5790.111)\nStacktrace:\nBacktrace:\n\tGetHandleVerifier [0x00A9A813+48355]\n\t(No symbol) [0x00A2C4B1]\n\t(No symbol) [0x00935358]\n\t(No symbol) [0x0091D293]\n\t(No symbol) [0x0097E37B]\n\t(No symbol) [0x0098C473]\n\t(No symbol) [0x0097A536]\n\t(No symbol) [0x009582DC]\n\t(No symbol) [0x009593DD]\n\tGetHandleVerifier [0x00CFAABD+2539405]\n\tGetHandleVerifier [0x00D3A78F+2800735]\n\tGetHandleVerifier [0x00D3456C+2775612]\n\tGetHandleVerifier [0x00B251E0+616112]\n\t(No symbol) [0x00A35F8C]\n\t(No symbol) [0x00A32328]\n\t(No symbol) [0x00A3240B]\n\t(No symbol) [0x00A24FF7]\n\tBaseThreadInitThunk [0x75CA7D59+25]\n\tRtlInitializeExceptionChain [0x77EBB79B+107]\n\tRtlClearBits [0x77EBB71F+191]","time":{"start":1691298102142,"stop":1691298102145,"duration":3}},{"uid":"26a8ca5747cd3335","status":"passed","time":{"start":1691297934529,"stop":1691297956815,"duration":22286}},{"uid":"62b106aae8d7ce1","status":"passed","time":{"start":1691297116331,"stop":1691297140044,"duration":23713}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":2,"unknown":0,"total":3},"items":[{"uid":"fc587e50e9ec422a","reportUrl":"http://localhost:8081/job/new%20project1/3/allure/#testresult/fc587e50e9ec422a","status":"passed","time":{"start":1691332003627,"stop":1691332024664,"duration":21037}},{"uid":"17de362aa965a8b2","reportUrl":"http://localhost:8081/job/new%20project1/2/allure/#testresult/17de362aa965a8b2","status":"passed","time":{"start":1691298170727,"stop":1691298194384,"duration":23657}}]},"tags":[]},"source":"212d518ec5efe8bc.json","parameterValues":[]}